<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Accessori_2" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti all&apos;indirizzo qui sopra.
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________



&apos;Option Explicit

Sub ToggleToolbarVisible(oDoc, sURL, prepinac)
 Dim oLayout
 oLayout = oDoc.CurrentController.getFrame().LayoutManager
&apos; xray oLayout
&apos;xray oLayout.isElementVisible(sURL)
&apos;xray oLayout.isElementLocked(sURL)
&apos;xray oLayout.isElementFloating(sURL)
&apos;oLayout.Visible=true
 Select Case prepinac
 Case 0 rem --- hide toolbar
 	 oLayout.hideElement(sURL)
 	&apos;oLayout.hideElement(sURL).setVisible(False)
 Case 1 rem --- show toolbar
 oLayout.showElement(sURL)
 &apos; oLayout.hideElement(sURL).setVisible(True)
 Case 2 rem --- switch toolbar
 If oLayout.isElementVisible(sURL) Then
 oLayout.hideElement(sURL)
 Else
 oLayout.showElement(sURL)
 End If
 End Select
End Sub



rem This is called whtn the status changes. In other words, when
rem the design mode is toggled and when the listener is first created.
Function Status_statusChanged(oEvt)
 &apos;Print &quot;In status changed: &quot; &amp; oEvt.State
 If repository(3) Then
 repository(3, False)
 repository(4, oEvt.State)
 End If
 removeStatusListener()
End Function

Function removeStatusListener()
 Dim oStatusListener &apos; The saved status listener to remove.
 Dim oUrl &apos; The saved URL object
 Dim oDisp &apos; The saved dispatcher object
 Dim x &apos; This is an empty variant variable!

 rem Verify that the dispatcher exists before trying to remove
 rem the status listener.
 oDisp = repository(1)
 If NOT IsEmpty(oDisp) AND NOT IsNull(oDisp) Then
 oUrl = repository(0)
 oStatusListener = repository(2)
 repository(0, x) &apos; remove the URL
 repository(1, x) &apos; remove the dispatch
 repository(2, x) &apos; remove the status listener
 oDisp.removeStatusListener(oStatusListener, oURL)
 End If
End Function

rem This is used to store a series of variables rather than pollute
rem the global name space. If the optional argument is passed, then
rem it is added to the array. Either way, the value is returned.
Function repository(n As Integer, Optional x)
 Static oObj(5) As Variant
 If Not IsMissing(x) Then oObj(n) = x
 repository = oObj(n)
End Function

rem ----------------------------------------------------------------------

SUB Rifa_GG_G1G1_Contab &apos; RIFA ANCHE le formule di somma.se
prind 
&apos;manomessa da Giuseppe Vizziello 2014
&apos; rifà le aree GG e G1G1 in CONTABILITA (servono per la formula somma.se)
	If Not thisComponent.Sheets.hasByName(&quot;CONTABILITA&quot;) Then Exit Sub
	
&apos;	ThisComponent.enableAutomaticCalculation(False)
	
	oSheet = ThisComponent.Sheets.getByName(&quot;CONTABILITA&quot;) &apos; da sostituire o integrare
	oRanges = ThisComponent.NamedRanges
	&apos; con qualcosa che esegua sia se nome sia se Attributo ???
&apos;	sString$ = &quot;T O T A L E&quot;
&apos;	oEnd=uFindString(sString$, oSheet)
&apos;	lLastUrow=oEnd.RangeAddress.EndRow
	lLastUrow = ultima_voce
	oStart=uFindString(&quot;LAVORAZIONI&quot; &amp; chr$(10) &amp; &quot;O PROVVISTE&quot;, oSheet)
	rIntest=oStart.CellAddress.Row+1
	lLastUrow = getLastUsedRow(oSheet)
	lrowInizio=oStart.CellAddress.Row+1
&apos;_____________________
chiudi_dialoghi 
&apos;_____________________
	lLastUrow = getLastUsedRow(oSheet)
rem ----------------------------------------------------------------------
rem Recupero il nome dell&apos;ultimo SAL registrato e ricalcolo lLastUrow
	IF oRanges.hasByName(&quot;_Lib_1&quot;) THEN
		nSal=idxSAL &apos;variabile impostata nel modulo _variabili
		Do while nSal &gt; 0
			IF oRanges.hasByName(&quot;_Lib_&quot; &amp; nSal) THEN
		&apos;			nSal=nSal-1
				exit do
			end if
		nSal=nSal-1
		Loop
		oNamedRange=oRanges.getByName(&quot;_Lib_&quot; &amp; nSal).referredCells&apos;.RangeAddress
		lLastUrow = oNamedRange.RangeAddress.EndRow
	End If 

ScriptPy(&quot;LeenoBasicBridge.py&quot;,&quot;rifa_nomearea&quot;, ThisComponent, &quot;CONTABILITA&quot;,&quot;$AJ$&quot; &amp; rIntest &amp; &quot;:$AJ$&quot; &amp; lLastUrow,&quot;GG&quot;) &apos;tagC - articolo
ScriptPy(&quot;LeenoBasicBridge.py&quot;,&quot;rifa_nomearea&quot;, ThisComponent, &quot;CONTABILITA&quot;,&quot;$S$&quot; &amp; rIntest &amp; &quot;:$S$&quot; &amp; lLastUrow,&quot;G1G1&quot;) &apos;quantità
ScriptPy(&quot;LeenoBasicBridge.py&quot;,&quot;rifa_nomearea&quot;, ThisComponent, &quot;CONTABILITA&quot;,&quot;$AK$&quot; &amp; rIntest &amp; &quot;:$AK$&quot; &amp; lLastUrow,&quot;conEuro&quot;) &apos;importi
	
&apos;sistemo la colonna &quot;Importi senza errori&quot;
	nEndRow = ultima_voce
&apos;	Print lLastUrow
	oSheet.getCellByPosition(36 ,1).formula = &quot;=SUBTOTAL(9;AK3:AK&quot; &amp; nEndRow+1 &amp; &quot;)&quot;
	For i = 0 To nEndRow &apos;row by row.
		If oSheet.getCellByPosition( 0, i ).CellStyle = &quot;Comp End Attributo_R&quot; then &apos;
			oSheet.getCellByPosition(36 , i).formula = &quot;=IF(ISERROR(P&quot; &amp; i+1 &amp; &quot;);&quot;&quot;&quot;&quot;;IF(P&quot; &amp; i+1 &amp; &quot;&lt;&gt;&quot;&quot;&quot;&quot;;P&quot; &amp; i+1 &amp; &quot;;&quot;&quot;))&quot;
			oSheet.getCellByPosition(36, i ).CellStyle = &quot;comp -controolo&quot;
		EndIf
	Next i

	oSheet = ThisComponent.Sheets.getByName(&quot;Elenco Prezzi&quot;)
	oEnd=uFindString(&quot;Fine elenco&quot;, oSheet)
	If isNull (oEnd) or isEmpty (oEnd) then &apos;11111
		ThisComponent.CurrentController.Select(oSheet.getCellByPosition(0, getLastUsedRow(oSheet)))
		msgbox &quot; Manca la riga rossa di chiusura della tabella! PROVVEDI ! &quot;
		exit sub
	end If 
	if lcolbase = &quot;ERRORE! Nell&apos;E.P. puoi aggiungere Max 3 colonne!&quot; then
		print lcolbase
		exit sub
	end If
	lrowF=oEnd.RangeAddress.EndRow
	oStart=uFindString(&quot;DESCRIZIONE DEI LAVORI E DELLE SOMMINISTRAZIONI&quot;, oSheet)
	rIntest=oStart.CellAddress.Row+1
	lcolbase = Colonna_giusta_EP (oSheet)
		
	sCol= ColumnNameOf(lcolbase+idxcol)
	sCol1= ColumnNameOf(lcolbase+idxcol+13) &apos;quantità
	sCol2= ColumnNameOf(lcolbase+idxcol+14)
	sCol4 = ColumnNameOf(lcolbase+idxcol+4) &apos;col E
			
	oSheet.getColumns.getByIndex(lcolbase+13+idxcol).isVisible = true
	oSheet.getColumns.getByIndex(lcolbase+14+idxcol).isVisible = true
			
i=rIntest
&apos;	oSheet.getCellByPosition(16,i).STRING=&quot;TOTALE&quot; &apos;totale computo
&apos;	oSheet.getCellByPosition(16,i).cellstyle=&quot;EP statistiche_Contab_q&quot; &apos;totale computo

&apos; FORMULE DELLA CONTABILITA&apos;
	oSheet.getCellByPosition(lcolbase + 19 , i).formula = &quot;=V4/$V$2&quot;
	oSheet.getCellByPosition(lcolbase + 19 , i).cellstyle = &quot;EP-mezzo %&quot;
	oSheet.getCellByPosition(lcolbase + 20 , i).formula = &quot;=SUMIF(GG;A4;G1G1)&quot;
	oSheet.getCellByPosition(lcolbase + 20 , i).cellstyle = &quot;EP statistiche_q&quot;
	oSheet.getCellByPosition(lcolbase + 21 , i).formula = &quot;=SUMIF(GG;A4;conEuro)&quot;
&apos;	oSheet.getCellByPosition(lcolbase + 21 , i).formula = &quot;=IF(C4=&quot;&quot;%&quot;&quot;;Q4*E4/100;Q4*E4)&quot;
	oSheet.getCellByPosition(lcolbase + 21 , i).cellstyle = &quot;EP statistiche&quot;
&apos;	ThisComponent.enableAutomaticCalculation(True)
END Sub

</script:module>