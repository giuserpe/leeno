<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Digestione" script:language="StarBasic">rem ***** BASIC *****
&apos;_______________________________________________________________________________________ 		
&apos; LeenO - Computo Metrico
&apos; Template assistito per la compilazione di Computi Metrici Estimativi 				
&apos;..._ Copyright (C) Bartolomeo Aimar - Giuseppe Vizziello - supporto@leeno.org
&apos; Licenza LGPL  2.1 https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html					
&apos; Il codice contenuto in questo modulo è parte integrante dell&apos;estensione LeenO 
&apos; Vi sarò grato se vorrete segnalarmi i malfunzionamenti (veri o presunti)
&apos; Sono inoltre graditi suggerimenti in merito alle gestione della Contabilità Lavori e 
&apos; per l&apos;ottimizzazione del codice.
&apos;_______________________________________________________________________________________

&apos;_______________________________________________________________________________________
rem Questo modulo serve sostanzialmente per elaborare listini con prezzi in formato testo
rem Il codice è stato elaborato da Emanuele e Lido Bernardini (utenti@openoffice.org) su mia &quot;sollecitazione&quot;.
rem Intendo dire che ho continuato per un paio di mesi a rompere l&apos;anima cambiando le specifiche e
rem lamentandomi... :-)
rem ma adesso il risultato mi sembra molto buono!
rem la macro può essere usata anche per convertire listini, prezzari ed estratti conto in 
rem formato testo (in genere i dati provenienti da file csv hanno quel problema)
rem Se Ultimus è installato la macro funziona su qualsiasi file di calc semplicemente selezionando 
rem una serie (verticale) di celle e premendo Ctrl-Alt-S.

rem Se pensate che un plugin autonomo possa essere utile fatemelo sapere.
&apos;_______________________________________________________________________________________
Global Dlg2 as Object
Global bContinua as boolean
Global a3 as integer


&apos;Public Dlg2 as Object
&apos;Public a3 as integer
&apos;public bContinua as boolean



Sub errore_stringa(oMycell, Tipo2)
	&apos;If MsgBox(&quot;Non riesco ad interpretare &quot;&amp; &quot;questa stringa...--&gt; &quot;&amp; _
	&apos;&quot;&apos; &quot; &amp; Tipo2 &amp; &quot; &apos;&quot; &amp; CHR$(10) &amp; _
	&apos;&quot; Proseguo copiando il testo tal quale ?&quot; &amp; &quot;&quot; ,36, &quot;&quot;) = 6 then
	oMycell.setString(Tipo2)
	oMycell.CellBackColor = RGB(255,0,0)
	&apos;end if
End Sub

Sub Copia_Stringa(oMycell,Tipo2)
on error goto gest_errore
	oMycell.setValue(cDbl(Tipo2))
&apos;	If sDec 
&apos;xray oMycell
	oMycell.NumberFormat = 4&apos;7&apos;2&apos;3 &apos;4
	oMycell.CellBackColor = RGB(0,255,0)
	exit sub
gest_errore:
errore_stringa(oMycell, Tipo2)
End Sub

function contieneTesto(sTesto as string) as boolean
	dim sPaginaRiferimento as string
	dim oTextSearch as object
	
	dim aSearchResult as object
	Dim aSrcOpt As New com.sun.star.util.SearchOptions
	
	oTextSearch = CreateUnoService(&quot;com.sun.star.util.TextSearch&quot;)
	
	With aSrcOpt
		.searchFlag = com.sun.star.util.SearchFlags.REG_EXTENDED
		.algorithmType = com.sun.star.util.SearchAlgorithms.REGEXP
		.searchString = &quot;.[A-Za-zéèòàçìù%&amp;]&quot;
	End With
	oTextSearch.setOptions(aSrcOpt)

	&apos;L&apos;asterisco serve come trucco per evitare che se il testo è il primo carattere
	&apos;il aSearchResult.subRegExpressions sia comunque uguale a zero
	aSearchResult = oTextSearch.searchForward(&quot;*&quot; &amp; sTesto, 0,Len(sTesto)+1)
	if aSearchResult.subRegExpressions &gt; 0 then
		contieneTesto = true
	end if
end function

function contieneSimboli(sTesto as string, sSimbolo as string) as integer
	Dim sPaginaRiferimento as string
	Dim iCount as integer
	Dim oTextSearch as object
	Dim aSearchResult as object
	Dim aSrcOpt As New com.sun.star.util.SearchOptions
	oTextSearch = CreateUnoService(&quot;com.sun.star.util.TextSearch&quot;)
&apos;print sSimbolo
	With aSrcOpt
		.searchFlag = com.sun.star.util.SearchFlags.REG_EXTENDED
		.algorithmType = com.sun.star.util.SearchAlgorithms.REGEXP
		if sSimbolo = &quot;.&quot; then
			.searchString = &quot;\&quot; &amp; sSimbolo
			else
				.searchString = sSimbolo
		end if
	End With
	oTextSearch.setOptions(aSrcOpt)

	&apos;L&apos;asterisco serve come trucco per evitare che se il testo è il primo carattere
	&apos;il aSearchResult.subRegExpressions sia comunque uguale a zero
	aSearchResult = oTextSearch.searchForward(&quot;*&quot; &amp; sTesto, 0,Len(sTesto)+1)
	
	if aSearchResult.subRegExpressions &gt; 0 then
		iCount = iCount + 1
	end if
	contieneSimboli = iCount
end function

function getDefDecimaSeparator() as string
 getDefDecimaSeparator = (Mid(cStr(1.2), 2, 1))
End function


&apos;++++++++++++++++ DIALOGHI +++++++++++++++++++++++++++++++++++

sub dialogo_annulla

	Dlg2.endExecute()
	bContinua = false
end sub

sub dialogo_chiudi
	a3=Dlg2.getControl(&quot;CheckBox3&quot;).State 

	Dlg2.endExecute()
	bContinua = true
end sub


 

sub accorpa_stringhe &apos;da eseguire a manina or aggiungendo un pulsante 
&apos;serve per i prezzari Marche per accorpare i sottocodici della colo 3 insieme ai codici della 2
	msgbox &quot;attendi pazientemente... sarai avvertito quando la macro finisce il suo lavoro...&quot;
	oSheet = ThisComponent.currentController.activeSheet
	lLastUrow = getLastUsedRow(oSheet)
	&apos;	lLastUrow = 10
 For i = 2 to lLastUrow
 	 		Osheet.getCellByPosition(2, i).string = _
 	 		Osheet.getCellByPosition(2, i).string &amp; &quot;.&quot; &amp; Osheet.getCellByPosition(3, i).string
 Next I 
 msgbox &quot;Ok! Fatto&quot;
end sub

</script:module>